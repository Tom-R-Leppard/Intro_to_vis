{
  "hash": "0563029966209d0245be9be969f32bb6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scatter Plots\"\nauthor: \"Tom Leppard\"\ndate: \"2025-06-16\"\noutput: html_document\n---\n\n\n\n\n\n\n\n\nToday we are going through scatter plots drawing from Chapter 5 of [Chang's book](https://r-graphics.org/CHAPTER-SCATTER.html). Here, I add a few comments for you to consider in addition to Chang's comments.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(gcookbook)\n```\n:::\n\n\n\n\n\n\nScatter plots are most useful if you have two variables in your dataset that are continuous. This is to say, they are both numeric data. A scatter plot positions one of the variables on the x axis of the graph and the other on the y axis. Each observation (unique row) is represented as a dot in the graph on the coordinates of their x and y axes.\n\nHere, we use the heigthweight dataset from the package \"gcookbook\" that Chang provides. We plot the height of the respondents alongside their age. To do this, we follow the ggplot2 formula: use the ggplot() function, tell R which dataset we are using (in this case, the heightweight), setting a basic aesthetic, then telling R what type of plot to produce. For scatter plots, we use geom_point() - the dots I mentioned above.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nIf each point represents an individual, what are some conclusions that you can draw from this? Is there a relationship between age and height in this dataset?\n\nThere are ways we can enhance this visual to make the relationship clearer. One approach is to highlight the density contours of the data. The contours from stat_density2d() represent estimated regions of equal point density. Smaller and tighter contours—or darker filled regions when using geom = \"polygon\" with a fill aesthetic—generally indicate areas where data points are more densely clustered. This is similar to how contour lines on a topographic map represent changes in elevation.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn)) +\n  geom_point() +\n  stat_density2d(geom = \"polygon\", alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nAn alternate version of this is to use the fill.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn)) +\n  geom_point() +\n  stat_density_2d_filled()\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nWe can enhance a scatter plot to better visualize the relationship between two variables by adding a regression line (or line of best fit). This line represents the best-fitting linear relationship that explains the variation between the variables. If there is a positive relationship, the line will slope upward, indicating that one variable tends to increase as the other does. Conversely, a negative relationship will result in a downward-sloping line—for example, if older individuals tended to be shorter.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nWhat does this plot say about the relationship between height and age in this dataset? Note, the grey area surrounding the line? This is a confidence interval denoting that we can be 95% sure that the true line of best fit lies within those margins.\n\nFinally, we can use some further characteristics about these individuals to filter the dataset and provide even more information. In this instance, we have the repsondent's sex. Here, we use the 'color' option in the aesthetic argument to change the colour of the points to match the observation's sex.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn, colour = sex)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nAlternatively, you can change the point shapes to reflect the same thing. This is an important thing to consider when visualising data. You want to enable all to interpret your data. Therefore, considering not everyone can see colours, it may be best to also change the shape. Here I use the 'shape' option to show one shape for male and another for female.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn, shape = sex, colour = sex)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nNow we can fit the same line of best fit as we did before but have a separate line for men and women.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn, colour = sex)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nWhat can you conclude from this plot about how the relationship between height and age differs for men and women?\n\nIf the points are distracting, you can just plot the line of best fit. I have also removed the confidence intervals using the se = False.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn, colour = sex)) +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nAlternatively, you can use the facet_grid() argument to split the plot into two plots based on the sex variable.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heightweight, aes(x = ageYear, y = heightIn)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  facet_grid(. ~ sex)\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nFinally, you can create a scatter plot matrix to demosntrate the pairwise relationship of multiple variables in your dataset. Please note, I think the utility of these visualisations are limited. Their main usage is to you the data scientist to take a quick look at pairwise associations (two variables) in your dataset. I strongly advise you ti create simpler plots for clients (or stakeholders).\n\nScatter plot matrices present the paired associations between all of the variables in a dataset. Here, for simplification, I am going to create a subset of the heightweight dataset that Chang's book provides us with.\n\nI use the head() function to look at the top rows of the dataset. This reveals that we have age in months and years. I am going to remove one of these and use the pairs() function to create a a scatter plot matrix.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(heightweight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sex ageYear ageMonth heightIn weightLb\n1   f   11.92      143     56.3     85.0\n2   f   12.92      155     62.3    105.0\n3   f   12.75      153     63.3    108.0\n4   f   13.42      161     59.0     92.0\n5   f   15.92      191     62.5    112.5\n6   f   14.25      171     62.5    112.0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheightweight_clean <- heightweight %>%\n  select(- ageMonth)\n```\n:::\n\n\n\n\n\n\nThe select() function enables you to pull select a subset of variables in the dataset. Using the minus sign drops that variable - in this case, adeMonth.\n\nNow we can plot our pairwise scatter plot matrix. These are a little funky when you first see them, so take some time to learn this.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(heightweight_clean)\n```\n\n::: {.cell-output-display}\n![](Scatterplots_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nTake a look at this matrix and you will see in the central diagonal cells the names of the variables that we have in our dataset. This diagonal acts as a sort of mirror for the visualisation. Since scatter plots are inherently pairwise visualisations, we interpret each \"cell\" in this matrix, each plot as a pairwise depiction of the variables on the diagonal.\n\nFor our purposes, let's name the rows in this matrix 1-4 (top to bottom) and the columns A-D (left to right). In this plot cell 1A has the variable sex. Cell 1B Therefore has the scatter plot of ageyear (in cell B2) and sex (1A). Age is on the x axis while sex is on the y. Cell 2C, then, shows the scatter plot between age and height (the one we have been looking at so far). Finally, 3D shows the scatter plot of height and weight. Following this logic, then What is represented in cell 1C?\n\nSex is on the y axis and height in on the x axis. The left side of this matrix, \"under\" the diagonal, is just the reverse of what we have discussed with the axes flipped.\n\nIs this starting to make sense? Spend some time now to familiarise yourself with this and describe with a partner the apparent association between each of the pairs (don't worry about the sex variable).\n\n## Activity\n\nChang adds some more insight into what you can do with scatter plots. From the following recipes in Chapter 5, select one or two and discuss their utility with a partner.\n\n### 5.3\n\n-   Alternative point shapes\n\n### 5.4\n\n-   You want to show even more in this plot. You Can plot another continuous variable to the colour or the size of the points.\n\n### 5.5\n\n-   What to do if you have a scatter plot with many overlapping points? - Note, this recipe uses a different dataset (diamonds).\n\n### 5.6\n\n-   You want to plot a regression line on a scatter plot but with a binary variable (0, 1).\n",
    "supporting": [
      "Scatterplots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}