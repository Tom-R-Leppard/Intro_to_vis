{
  "hash": "db55c780a77f576322f73b6741b3f165",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cleaning and Annotating\"\nauthor: \"Tom Leppard\"\ndate: \"2025-06-17\"\noutput: html_document\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(cowplot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhybrid <- read.csv(file.choose())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_costs <- hybrid %>%\n  group_by(class) %>%\n  summarise(cost = mean(msrp, na.rm = TRUE)) %>%\n  ungroup()\n```\n:::\n\n\n\n\n\n\n\n\n## Titles\n\nThere are three things you need to learn about titles. First, how to alter them using the labs() option. Second, how to change their presentation (size etc.). Third, the substantive utility of titles on graphs.\n\nBellow I demonstrate code using a moderated version of the hybrid cars dataset. I present two versions of the graph to demosntrate differences in substance. You may wish to have descriptive titles that describe what the chart shows. Or you may wish to have narrative-based titles that describe what the chart shows.\n\nDescriptive Title:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Average Price by Car Class\", x = \"Car Class\", y = \"Average Cost\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12))\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nNarrative Title:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", x = \"Car Class\", y = \"Average Cost\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12))\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Axes\n\n### Swapping Axes\n\nYou might consider swapping the axes of your chart. This means that the content on the X axis (generally considered the independent variable) is swapped with the Y axis. This is a little trick that can improve the readership of your plot. Consider a bar chart. The wider it gets the harder it is to really see what Y value the X category has at the far side. Looking at a char from right to left is a little less intuitive and, without a ruler, hard to see what is doing on. Meanwhile, top to bottom can be a little easier.\n\nLet's repeat our last bar chart and flip it using the coord_flip() option of ggplot. See what you think.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", x = \"Car Class\", y = \"Average Cost\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n### Changing order of Bar Chart Items\n\nChanging the order of categories in a chart can be a good way to clearly visualise your data. Consider the bar chart above. If might look a little neater to change the orders.\n\nInside the aes() builder, use the reorder() option. You place x = reorder(x variable, y variable), which will arrange your X axis in ascending or descending order. Take a look at the following two chunks.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = reorder(class, -cost), y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", \n       x = \"Car Class\", \n       y = \"Average Cost\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = reorder(class, +cost), y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", \n       x = \"Car Class\", \n       y = \"Average Cost\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nYou can also change and customise the order you want.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", \n       x = \"Car Class\", \n       y = \"Average Cost\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  coord_flip() +\n  scale_x_discrete(limits = c(\"TS\", \"MV\", \"M\", \"L\", \"SUV\", \"PT\", \"C\"))\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Annotations on Graphs\n\nThere are many different annotations you may wish to include in your graph. The aims of annotations are to highlight elements of the graph or to clarify something about the graph. Many of this comes from [Chapter 7](https://r-graphics.org/CHAPTER-ANNOTATE.html) of Chang's book.\n\nWhen creating a bar graph the code is slightly different. Since the x axis is categorical, the coordinates for your annotation need to reflect that. Instead of the number value of the annotation, you need to tell the ggplot which category you want the annotation over. Here, I place an arrow and some text onto the graph to demonstrate both the geom_text() and annotate() arguments.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", x = \"Car Class\", y = \"Average Cost\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  geom_text(x = \"TS\", y = 70000, aes(label = \"Cheapest\")) +\n  annotate(\"segment\", x = \"TS\", xend = \"TS\", y = 60000, yend = 20000, arrow = arrow(angle = 45, length = unit(.2,\"cm\"))) \n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\nThere are some other ways that you can highlight elements of your plot. For example, you could shade a specific area of your plot or add other annotations to highlight aspects of your visualisation.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncosts_time <- hybrid %>%\n  group_by(year) %>%\n  summarise(avg_cost = mean(msrp, na.rm = TRUE)) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(costs_time, aes(x = year, y = avg_cost)) +\n  geom_line(color = \"black\") +\n  annotate(\"rect\", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = \"red\")\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Colours\n\nColours are used to draw attention and highlight aspects of visualisations. You could change the fill of boxes, the lines or dots of a plot. Throughout the course so far you have seen example of this using various options of color or fill. Here, let's discuss accessible colours best used for contrast in visualisations both in the theme of the plot and in the plot itself. In general, the higher contrast colours are best. In concert with that, however, is the fact that some colour pairs are less colour-blind friendly than others. For example, green and red is one of the most common forms of colour blindness yet we use it so much! Think traffic lights, general images with green meaning go and red stop.\n\nOne thing to consider is a dark/light contrast from background to foreground. You can use the theme options to do this. Look at the following examples and see what you think.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(costs_time, aes(x = year, y = avg_cost)) +\n  geom_line(color = \"white\") +\n  annotate(\"rect\", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.3, fill = \"red\") +\n  theme_dark()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(costs_time, aes(x = year, y = avg_cost)) +\n  geom_line(color = \"black\") +\n  annotate(\"rect\", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = \"red\") +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(costs_time, aes(x = year, y = avg_cost)) +\n  geom_line(color = \"black\") +\n  annotate(\"rect\", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = \"red\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Multiple Plots\n\nYou might want to present multiple plots together. One option is to use the facet() option which is useful to split your plot out by various categories. Another option is to use the plot_grid() function from a package called cowplot. In order to use the plot_grid function, you first have to store your plots as objects. Follow the flow of code in the next chunk and see if you can determine each step.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Making the objects\np1 <- ggplot(costs_time, aes(x = year, y = avg_cost)) +\n  geom_line() +\n  annotate(\"rect\", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = \"red\")\n\np2 <- ggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", \n       x = \"Car Class\", \n       y = \"Average Cost\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  coord_flip() +\n  scale_x_discrete(limits = c(\"TS\", \"MV\", \"M\", \"L\", \"SUV\", \"PT\", \"C\"))\n\np3 <- ggplot(class_costs, aes(x = class, y = cost)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Luxury Hybrids are Most Expensive\", x = \"Car Class\", y = \"Average Cost\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title.x = element_text(size = 14),\n    axis.title.y = element_text(size = 14),\n    axis.text = element_text(size = 12)) +\n  geom_text(x = \"TS\", y = 70000, aes(label = \"Cheapest\")) +\n  annotate(\"segment\", x = \"TS\", xend = \"TS\", y = 60000, yend = 20000, arrow = arrow(angle = 45, length = unit(.2,\"cm\"))) \n```\n:::\n\n\n\n\n\n\n\n\nNow to create the plot_grid (which you can also make an object and even plot_grid from those!).\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(p1, p2, p3, labels = c(\"A\", \"B\", \"C\"), ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Cleaning-and-Annotating_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## Activities\n\nFrom Winston Chang's [R Graphics Cookbook](https://r-graphics.org/):\n\n-   7.8 annotating individual facets\n\n-   8.2 Setting range of Axes\n\n-   8.5 Setting Ratio of X/Y axes\n\n-   8.6/8.9 tick labels\n\n-   9.1 More on titles\n\n-   9.2 Appearance of Text\n\n-   Chapter 10 Legends\n\n-   12.3/4 Colorblind Friendly Palettes\n",
    "supporting": [
      "Cleaning-and-Annotating_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}