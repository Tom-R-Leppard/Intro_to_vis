hyb$id_chr <- as.character(hyb$id) # change a variable to a character create a new variable with that.
class(hyb$id_chr)
hyb$class <- as.factor(hyb$class)
class(hyb$class)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(dplyr)
hybrid <- read.csv(file.choose())
class_costs <- hybrid %>%
group_by(class) %>%
summarise(cost = mean(msrp, na.rm = TRUE)) %>%
ungroup()
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Average Price by Car Class", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
geom_text(x = "TS", y = 70000, aes(label = "Cheapest")) +
annotate("segment", x = "TS", xend = "TS", y = 60000, yend = 20000, arrow = arrow(angle = 45, length = unit(.2,"cm")))
costs_time <- hybrid %>%
group_by(year) %>%
summarise(avg_cost = mean(msrp, na.rm = TRUE)) %>%
ungroup()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line() +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red")
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip()
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = rev())
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = rev(levels(class_costs$class)))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
scale_x_discrete(limits = rev(levels(class_costs$class)))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
scale_x_discrete(limits = rev(levels(class_costs$class)))
ggplot(class_costs, aes(x = class, y = cost), x = reorder(class, +y)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12))
ggplot(class_costs, aes(x = class, y = cost), x = reorder(x, +y)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12))
ggplot(class_costs, aes(x = reorder(class, cost), y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)
)
ggplot(class_costs, aes(x = reorder(class, cost), y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip()
ggplot(class_costs, aes(x = reorder(class, -cost), y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip()
ggplot(class_costs, aes(x = reorder(class, +cost), y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip()
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "Mv", "M", "L", "PT", "SUV", "C"))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "MV", "M", "L", "PT", "SUV", "C"))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "MV", "M", "L", "PT", "SUV", "C"))
ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "MV", "M", "L", "SUV", "PT", "C"))
g1 <- ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line() +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red")
g1 + g1
library(cowplot)
# Making the objects
p1 <- ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "MV", "M", "L", "SUV", "PT", "C"))
p2 <- ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
geom_text(x = "TS", y = 70000, aes(label = "Cheapest")) +
annotate("segment", x = "TS", xend = "TS", y = 60000, yend = 20000, arrow = arrow(angle = 45, length = unit(.2,"cm")))
plot_grid(p1, p2, labels = "A", "B")
# Making the objects
p1 <- ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line() +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red")
p2 <- ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive",
x = "Car Class",
y = "Average Cost") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
coord_flip() +
scale_x_discrete(limits = c("TS", "MV", "M", "L", "SUV", "PT", "C"))
p3 <- ggplot(class_costs, aes(x = class, y = cost)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Luxury Hybrids are Most Expensive", x = "Car Class", y = "Average Cost") +
theme_minimal() +
theme(plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)) +
geom_text(x = "TS", y = 70000, aes(label = "Cheapest")) +
annotate("segment", x = "TS", xend = "TS", y = 60000, yend = 20000, arrow = arrow(angle = 45, length = unit(.2,"cm")))
plot_grid(p1, p2, labels = "A", "B")
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 2)
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 1)
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 3)
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 2)
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 2)
plot_grid(p1, p2, p3, labels = "A", "B", "C")
plot_grid(p1, p2, p3, labels = "A", "B", "C", ncol = 2)
plot_grid(p1, p2, p3, labels = c("A", "B", "C"), ncol = 2)
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "firebrick") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red")
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red")
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_void()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "white") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_dark()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_light()
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_bw()
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_gray()
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_grey()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "black") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.1, fill = "red") +
theme_bw()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "white") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.5, fill = "red") +
theme_dark()
ggplot(costs_time, aes(x = year, y = avg_cost)) +
geom_line(color = "white") +
annotate("rect", xmin = 2005, xmax = 2007, ymin =27500, ymax = 47000, alpha = 0.3, fill = "red") +
theme_dark()
library(ggsankey)
library(ggplot2)
library(dplyr)
library(tidyr)
df1 <- mtcars
df <- mtcars %>%
make_long(cyl, vs, am, gear, carb)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey() +
scale_fill_discrete(drop=FALSE)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey() +
scale_fill_discrete(drop=FALSE) +
theme_sankey()
library(ggsankey)
library(ggplot2)
library(dplyr)
library(tidyr)
df1 <- mtcars
df <- mtcars %>%
make_long(cyl, vs, am, gear, carb)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey() +
scale_fill_discrete(drop=FALSE) +
theme_sankey()
library(ggsankey)
library(ggplot2)
library(dplyr)
library(tidyr)
df1 <- mtcars
df <- mtcars %>%
make_long(cyl, vs, am, gear, carb)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node))) +
geom_sankey() +
scale_fill_discrete(drop=FALSE) +
theme_sankey()
df <- data.frame(
person = 1:6,
department = c("HR", "HR", "IT", "IT", "Finance", "Finance"),
role = c("Manager", "Analyst", "Engineer", "Manager", "Analyst", "Manager")
)
ggplot(df_long, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.6, node.color = "gray30") +
geom_sankey_label(size = 3, color = "white") +
theme_sankey(base_size = 16) +
labs(title = "Simple Department-to-Role Sankey Diagram",
fill = "Node")
df <- data.frame(
person = 1:6,
department = c("HR", "HR", "IT", "IT", "Finance", "Finance"),
role = c("Manager", "Analyst", "Engineer", "Manager", "Analyst", "Manager")
)
df_long <- df %>%
make_long(department, role)
ggplot(df_long, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.6, node.color = "gray30") +
geom_sankey_label(size = 3, color = "white") +
theme_sankey(base_size = 16) +
labs(title = "Simple Department-to-Role Sankey Diagram",
fill = "Node")
library(networkD3)
nodes <- data.frame(name = unique(c(df$department, df$role)))
df_links <- df %>%
group_by(department, role) %>%
summarise(value = n(), .groups = "drop") %>%
mutate(
source = match(department, nodes$name) - 1,
target = match(role, nodes$name) - 1
) %>%
select(source, target, value)
sankeyNetwork(
Links = df_links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
fontSize = 12,
nodeWidth = 30
)
df <- data.frame(
person = 1:6,
department = c("HR", "HR", "IT", "IT", "Finance", "Finance"),
role = c("Manager", "Analyst", "Engineer", "Manager", "Analyst", "Manager"),
location = c("NY", "NY", "SF", "NY", "SF", "SF")
)
all_nodes <- unique(c(df$department, df$role, df$location))
nodes <- data.frame(name = all_nodes)
links_1 <- df %>%
group_by(department, role) %>%
summarise(value = n(), .groups = "drop") %>%
mutate(
source = match(department, nodes$name) - 1,
target = match(role, nodes$name) - 1
) %>%
select(source, target, value)
links_2 <- df %>%
group_by(role, location) %>%
summarise(value = n(), .groups = "drop") %>%
mutate(
source = match(role, nodes$name) - 1,
target = match(location, nodes$name) - 1
) %>%
select(source, target, value)
links <- bind_rows(links_1, links_2)
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
fontSize = 12,
nodeWidth = 30
)
ggplot(df_long, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.6, node.color = "gray30") +
geom_sankey_label(size = 3, color = "white") +
theme_sankey(base_size = 16) +
labs(title = "Simple Department-to-Role Sankey Diagram",
fill = "Node")
ggplot(df_long, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.6, node.color = "gray30") +
geom_sankey_label(size = 3, color = "white") +
theme_sankey(base_size = 16) +
labs(title = "Simple Department-to-Role Sankey Diagram",
fill = "Node")
This simple Sankey diagram shows how people from each **department** (HR, IT, Finance) transition into **roles** (Manager, Analyst, Engineer). The **thickness of the flows** corresponds to how many people follow each path.
df <- data.frame(
person = 1:6,
department = c("HR", "HR", "IT", "IT", "Finance", "Finance"),
role = c("Manager", "Analyst", "Engineer", "Manager", "Analyst", "Manager"),
location = c("NY", "NY", "SF", "NY", "SF", "SF")
)
all_nodes <- unique(c(df$department, df$role, df$location))
nodes <- data.frame(name = all_nodes)
links_1 <- df %>%
group_by(department, role) %>%
summarise(value = n(), .groups = "drop") %>%
mutate(
source = match(department, nodes$name) - 1,
target = match(role, nodes$name) - 1
) %>%
select(source, target, value)
links_2 <- df %>%
group_by(role, location) %>%
summarise(value = n(), .groups = "drop") %>%
mutate(
source = match(role, nodes$name) - 1,
target = match(location, nodes$name) - 1
) %>%
select(source, target, value)
links <- bind_rows(links_1, links_2)
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "source",
Target = "target",
Value = "value",
NodeID = "name",
fontSize = 12,
nodeWidth = 30
)
